export interface PressReaderCommonConfig {
  colorBrand?: string;
  colorBrandDark?: string;
  colorBackground?: string;
  colorBackgroundDark?: string;
  brandGradientStartColor?: string;
  brandGradientEndColor?: string;
  onboardingEnabled?: boolean;
  sdkExitButtonText?: string;
  supportEmailAddress?: string;
  newsfeedApi?: number;
  articleCommentsEnabled?: boolean;
  articleVotesEnabled?: boolean;
  isPopupArticleViewAllowed?: boolean;
  readerExternalLinksEnabled?: boolean;
  localServerUrl?: string;
  showCustomerSupport?: boolean;
  supportPhoneNumber?: string;
  termsOfUseUrl?: string;
  privacyPolicyUrl?: string;
  registrationUrl?: string;
  translateEnabled?: boolean;
  showRegistration?: boolean;
  facebookUrl?: string;
  instagramUrl?: string;
  twitterUrl?: string;
  youtubeUrl?: string;
}

export interface PressReaderIosConfig {
  deviceAccountOnly?: boolean;
  mode?: number;
  sdkAuthorizationType?: number;
  configRunTimeUpdateAllowed?: boolean;
  configVersion?: string;
  catalogMode?: number;
  filterPanelEnabled?: boolean;
  homeFeedChannel?: string;
  homeFeedCollection?: string;
  articleAutorizationRequiredToPrint?: boolean;
  articleAutorizationRequiredToListen?: boolean;
  channelFeedArticleAccessMode?: number;
  feedArticleActions?: number;
  issueFeedArticleActions?: number;
  aboutSocialUrls?: Record<string, string>[];
  supportEmails?: string[];
  supportEmailSubject?: string;
  appMenuItemsAbsence?: number;
  sdkExitButtonHidden?: boolean;
  autoTranslateAvailability?: number;
  autoTranslatePairsLimit?: number;
  externalAuthEnabled?: boolean;
}

export interface PressReaderAndroidConfig {
  articleHashsymbolInHashtagEnable?: boolean;
  articleOnlineShowByline?: boolean;
  articleShowBookmarkSection?: boolean;
  articleShowLongTapMenuForEmptyArticle?: boolean;
  articleToolbarCopyEnable?: boolean;
  articleToolbarListenButtonEnable?: boolean;
  articleToolbarPageviewButtonEnable?: boolean;
  bookmarksDialogEnabled?: boolean;
  bookmarksEnabled?: boolean;
  bookmarksPagesetsEnabled?: boolean;
  defaultAppPanel?: number;
  enableGoogleAnalyticsWebId?: string;
  enablePianoSignin?: boolean;
  enablePrintSubscriptions?: boolean;
  enableSocialSignin?: boolean;
  facebookAppId?: string;
  facebookAppSecret?: string;
  favouritesEnabled?: boolean;
  forceTtsLangugage?: string;
  gigyaAppId?: string;
  gigyaEnabled?: boolean;
  hideSharing?: boolean;
  homeCollectionId?: string;
  homeCollectionName?: string;
  isFreeApp?: boolean;
  janrainAppId?: string;
  janrainEnabled?: boolean;
  janrainTokenUrl?: string;
  mandatoryAuthentication?: boolean;
  newspaperDetailsLabel?: string;
  newspaperNavigationPanelEnabled?: boolean;
  passwordRecoveryUrl?: string;
  privSortCids?: string;
  publisherChannelId?: string;
  publisherPushTopicId?: string;
  purchaseAdviceExpirationPeriod?: number;
  radioSupport?: boolean;
  sampleIssuesCids?: string;
  settingsAutocleanupDefault?: number;
  settingsBackgroundUpdatesEnable?: boolean;
  settingsDataStoragePathEnable?: boolean;
  settingsFullscreenHighlightsEnable?: boolean;
  settingsInfoEnable?: boolean;
  settingsPostponeSleepEnable?: boolean;
  settingsSingleTapZoomDefault?: boolean;
  settingsSmartZoomEnable?: boolean;
  settingsTipsEnable?: boolean;
  showFavorites?: boolean;
  showFreeIcon?: boolean;
  showLoginInSplash?: boolean;
  showRelatedArticles?: boolean;
  singleTitleMode?: boolean;
  smartEditionName?: string;
  smartFlowDefault?: boolean;
  smartFlowEnabled?: boolean;
  twitterAppId?: string;
  twitterAppSecret?: string;
  webRegistration?: boolean;
  webUpdateAccountUrl?: string;
  webUpdateSubscriptionUrl?: string;
  sdkExitButton?: boolean;
  sdkHomefeedButton?: boolean;
  sdkCatalogButton?: boolean;
  sdkMylibraryButton?: boolean;
  sdkAccountsButton?: boolean;
  sdkSettingsButton?: boolean;
  sdkBookmarksButton?: boolean;
  fairUsageUrl?: string;
  newPaymentFlowSupported?: boolean;
  hyphenationDisabled?: boolean;
  themeSwitchingEnabled?: boolean;
}

export interface ExpoPressReaderPluginProps extends PressReaderCommonConfig {
  serviceName: string;
  isDebugMode?: boolean;
  ios?: PressReaderIosConfig;
  android?: PressReaderAndroidConfig;
  iosDeploymentTarget?: string;
  androidMinSdkVersion?: number;
}
